Outproxies in I2P

Outproxies in I2P
===================

I2P an sich ist ein internes Netzwerk. Dies bedeutet, dass es ohne Hilfe keine
Verbindung mit anderen Netzwerken aufbauen kann. Man kann also nur auf interne
Seiten sogenannte Eepsites zugreifen. Man kann also ohne Hilfe auch nicht mit
dem Internet oder dem Tor-Netzwerk kommunizieren und darauf zugreifen. Ein
Outproxy fungiert also als Hilfe, damit I2P mit anderen Netzwerken
kommunizieren kann.

Wie funktioniert ein Outproxy?
===========================

Versucht man eine Eepsite aufzurufen, schaut I2P im Adressbuch nach der
entsprechenden Adresse. Analog dazu ist das Telefonbuch. Man weiß den Namen
(Eepsite) und man versucht die Telefonnummer (Ziel) zu finden. [siehe auch DNS
im WWW] Als nächstes versucht I2P die Eepsite zu kontaktieren und man kann
surfen. Dies funktioniert so bei Clearnet-Seiten nicht. Damit man trotzdem im
Clearnet surfen kann, gibt es Outproxies:
Wenn man versucht, eine Clearnet Seite aufzurufen, erkennt I2P dies an der
Endung und schaut nach ob ein oder mehrere Outproxies eingerichtet wurden sind.
Wenn nein, gibt I2P eine Fehlermeldung aus. Wenn ja, schaut I2P im Adressbuch
nach der Adresse des Outproxies und kontaktiert diesen. Als nächstes wird die
Anfrage (z. B. an Twitter oder DuckDuckGo) an den Outproxy gesendet. Dieser
kontaktiert dann an Stelle des Benutzers die Website und empfängt eine Antwort.
Diese leitet er an den Benutzer weiter. Der Outproxybetreiber hat also auch die
Möglichkeit, den Verkehr des Benutzer mit zuschneiden,
zu zensieren oder zu manipulieren.

!(outproxies.png)

1. Der Browser sendet die Anfrage an den HTTP Proxy des I2P Routers.
2. Der I2P Router sucht im Adressbuch nach dem Ziel für den Outproxy
3. Das Adressbuch übergibt das Ziel zurück
4. Die Anfrage wird an den Outproxy gesendet
5. Der Outproxy übermittelt im Auftrag die Anfrage an den Webserver
6. Der Webserver antwortet dem Outproxy
7. Der Outproxy leitet die Anfrage zurück an den HTTP Proxy
8. Der HTTP Proxy übergibt die Anfrage an den Browser und somit an den Benutzer

Der Benutzer möchte die Seite geti2p.net über das I2P Netzwerk mit Hilfe
eines Outproxies aufrufen. Er gibt an einen konfigurierten Browser die
Adresse ein und der Browser erstellt eine anfrage. Diese sendet er zum HTTP
Proxy des I2P Router (Punkt 1). Der I2P Router schaut nun nach ob ein
Outproxy eingestellt ist. Als nächstes holt der Router sich das Ziel
(vergleichbar mit einer IP-Adresse im Clearnet) vom Adressbuch. Bei Punkt 2
sendet er die Anfrage an das Adressbuch und bei Punkt 3 bekommt er die
Antwort. Als nächstes kann der Router den Outproxy kontaktieren. Nachdem
die Verbindung erfolgreich hergestellt worden ist, sendet er die Anfrage an
den Outproxy (Punkt 4). Der Outproxy wiederum leitet die Anfrage an den
entsprechenden Webserver weiter (Punkt 5). Der Webserver antwortet dem
Outproxy (Punkt 6) und denkt, dass nicht der eigentliche Nutzer sondern der
Outproxy die Anfrage wollte. Nachdem der Outproxy die Antwort erhalten hat,
leitet er diese an den I2P Router weiter (Punkt 7). Der I2P Router wiederum
leitet die Anfrage an den Browser zurück (Punkt 8). Damit hat der Benutzer
die Seite erhalten.

Wie richte ich einen Outproxy ein?
============================

Als erstes braucht man die Adresse des Outproxies. Leider gibt es im Moment
sehr wenige Outproxies. Zu diesen gehören: outproxy.bandura.i2p, false.i2p,
outproxy-tor.meeh.i2p, purokishi.i2p
Alle drei leiten die Anfragen über das Tor-Netzwerk. Dies bedeutet das die
Anfrage bei Punkt 5 und 6 durch das Tor-Netzwerk geleitet werden. Einer der
Gründe, warum Outproxybetreiber dies tun, ist das es ihnen Rechtssicherheit
gibt.
Als erstes geht im in die Tunnelliste im I2P Interface. Diese ist im Normalfall
unter http://127.0.0.1:7657/i2ptunnelmgr zu finden. Dort wählt man den
Tunnel aus, für welchen man den Outproxy konfigurieren möchte. Dort wählt
man das Zahnrat, um den Tunnel zu bearbeiten.
!(setup-1-de.svg)
Als nächstes findet man unter "Ausgehende Proxies" (Outproxies) bzw. "SSL-
Ausgangsproxies" (SSL Outproxies) eine Textbox. Ausgehende Proxies sind die
Outproxies, welche I2P bei HTTP Verbindungen benutzt; SSL-
Ausgangsproxies sind die Outproxies, welche bei HTTPS-Verbindungen
benutzt werden. Dort trägt man die entsprechenden Outproxies ein.
Es ist auch möglich mehrere Outproxies einzutragen. Diese trennt man dann
mit einem Komma. Bei einer Anfrage an einen Outproxy wählt der Router
zufällig einen Outproxy aus.
!(setup-2-de.svg)
Danach speichert man die Tunneleinstellungen und fertig!
(Bei purokishi.i2p ist es erforderlich, dass beide Verschlüsselungsarten
aktiviert sind. Dies kann man in den Tunneleinstellungen unter "Verschlüsselungs
Algorythmen" tun. Dabei muss der Tunnel gestoppt sein. (Wird ein Tunnel mit
anderen Klienten geteilt, müssen entsprechend alle Klienten gestoppt werden.))

___Achte darauf____, dass der Outproxy im Adressbuch eingetragen ist. Am besten
kannst du es überprüfen, indem du die Adresse des Outproxies aufrufst.
Erscheint die Meldung, dass die Adresse nicht im Adressbuch gefunden
worden ist, kann man einen Jumper verwenden. Sonst kann man den
Outproxy sofort benutzen._
 
Welche Gefahr besteht bei der Nutzung von Outproxies?
========================================

Es besteht die Gefahr, dass der Outproxybetreiber böswillig ist und die
Anfragen oder Antworten mitschneidet, also protokolliert, oder die Antworten
manipuliert. Er kann aber auch, was nicht so schlimm ist, Seiten zensieren.
Es besteht in etwa die gleiche Gefahr wie bei der Nutzung des Tor-
Netzwerkes. Der Unterschied besteht nur darin, dass das Tor-Netzwerk mehr
Exit-Nodes hat als I2P Outproxies. Es wird daher empfohlen, dass wenn man
im Clearnet surfen möchte, man Tor benutzt.

Wie kann ich einen Outproxy betreiben?
======================================
Grundlagen
----------
An erstes sollte man das System verstehen, wie ein Outproxy für den
Betreiber funktioniert.
Beispiel 1 - I2P + Proxy:
Zu erst richtet man einen Proxy ein, welcher auf seinem eigenen Computer
lauft (die IP-Adresse des eigenen Computer ist immer 127.0.0.1). Dann richtet
man in I2P einen Tunnel so ein, dass er als Server seinen lokalen Computer,
also 127.0.0.1, nimmt.
Beispiel 2 - I2P + Proxy + Tor:
Die Konfiguration von I2P bleibt wie bei Beispiel 1, nur die Konfiguration des
Proxy‘s wird geändert. Er ist zwar immer noch auf 127.0.0.1 eingerichtet,
leitet aber alle Anfragen über das Tor-Netzwerk weiter. Dafür muss Tor
installiert sein und einen Sock-Proxy bereit stellen. Dieser Sock-Proxy wird
dann in einen HTTP/HTTPS-Proxy von der eigentlichen Proxy-Software
umgewandelt.

Outproxy einrichten
-------------------
In der Folgenden Anleitung, wird die Einrichtung eines Outproxy unter
Debian 10 mit dem Java I2P Router und der Proxy-Software Privoxy gezeigt.
Diese Anleitung dürfte allerdings auch mit ein paar Änderungen unter Ubuntu
funktionieren.

1. I2P installieren: Der erste Schritt besteht darin, I2P zu installieren.

2. Privoxy installieren:
Öffne dafür ein Terminal (Ctrl+T) und gebe folgendes ein:
    sudo apt-get install privoxy
Wichtig dabei ist, dass du in der sudo-Gruppe bist und die Berechtigung
verfügst, Programme mit apt-get zu installieren. Dies sollte im Normalfall so
sein.
!(run-outproxy/run-outproxy-1.png)

3. Privoxy automatisch nach Systemstart starten:
Gebe dafür als nächstes in das Terminal folgendes ein:
    sudo systemctl enable privoxy

4. Privoxy testen:
Standardmäßig ohne Änderung lauft Privoxy auf 127.0.0.1 und dem Port
8118. Öffne zum Testen einen Browser und rufe die Adresse
http://127.0.0.1:8118/. Es dürfte folgende Meldung erscheinen: "Invalid
header received from client." Sollte man keine Antwort bekommen ist es vielleicht noch notwendig
Privoxy zu starten. Dies tut man mit folgendem Befehl:
    sudo systemctl start privoxy
!(run-outproxy/run-outproxy-2.png)

5. I2P konfigurieren - Tunnel erstellen
Öffne dazu http://127.0.0.1:7657/i2ptunnel/. Es erscheint eine Liste mit
allen Tunneln von I2P.
a. Klicke auf "Tunnel Wizard"
!(run-outproxy/run-outproxy-3.png)
b. Wähle im folgendem Schritt "Server Tunnel" und klicke auf
"Nächstes"
!(run-outproxy/run-outproxy-4.png)
c. Wähle in der Liste "Standard" und klicke auf "Nächstes"
!(run-outproxy/run-outproxy-5.png)
d. Wähle einen Namen für den Outproxy z. B. "i2p-outproxy" und klicke
dann auf "Nächstes"
!(run-outproxy/run-outproxy-6.png)
e. Gebe bei "Host:" die Adresse 127.0.0.1 ein und bei "Port:" den Port
!(run-outproxy/run-outproxy-7.png)
8118. Drücke danach auf den Button "Nächstes"
f. Wähle die Option "Tunnel automatisch starten wenn der Router
startet" aus.
!(run-outproxy/run-outproxy-8.png)
g. Klicke dann auf "Abschließen".
h. Überprüfe danach noch einmal die Tunnelkonfiguration:
    Server oder Client Tunnel ? Server
    Tunnel Typ Standard
    Tunnel Name i2p-outproxy
    Tunnel Beschreibung
    Adresse zum Anbinden 127.0.0.1
    Tunnel Port 8118
    Tunnel automatisch starten ? Yes
Klicke danach auf "Speichere Tunnel"
!(run-outproxy/run-outproxy-10.png)

6. I2P konfigurieren - Tunnel bearbeiten
Klicke dazu auf das Zahnrat bei dem Outproxy-Tunnel.
!(run-outproxy/run-outproxy-10.png)
Bearbeite unter dem Anschnitt "Tunneloptionen". Wähle bei "Länge"
eine möglichst kleine Zahl: Um so kleiner die Zahl, umso schneller erreichen
die Benutzer den Outproxy, aber umso weniger Anonym ist man und
umgekehrt. Wähle bei "Varianz" nach Möglichkeit "0 Hop Varianz" aus.
Wähle bei "Anzahl" eine möglichst Hohe Zahl aus: Umso größer die Zahl
umso, besser integriert und umso stabiler ist der Outproxy. Bei einer hohen
Zahl kann sein Computer aber auch mehr Arbeiten, da er mehr
Tunnelanfragen bearbeiten muss. Wähle bei "Anzahl an Ersatztunneln"
etwa 1 bis 2 Tunnel aus. Wenn bei dir öfters Tunnel unerwartet beendet
werden, empfiehlt sich eine Höhe Anzahl.
!(run-outproxy/run-outproxy-11.png)
Gehe als nächtes nach unten zu den Limit-Einstellungen und verändere die Standardwerte.
Pro Client wird empfohlen:
40 Pro Minute - 1000 Pro Stunden - 10000 pro Tag
Bei Total wird empfohlen alle Werte auf 0 zu setzen. Durch diese Einstellungen wird
der Outproxy nicht die Meldung "Too many Requests" anzeigen. Dies kann bei intensiver
Benutzung der Benutzer zu ungewünschtheiten führen. Es kann allerdings auch sein,
dass dadurch mehr Leistung und Bandbreite des Servers benutzt wird.
!(run-outproxy/run-outproxy-12.png)
Klicke anschließend auf Speichern.
!(run-outproxy/run-outproxy-13.png)

Tor hinzufügen
--------------
Viele Outproxybetriber leiten die Anfragen über das Tor-Netzwerk weiter. Dies
hat für die Betreiber den Vorteil, dass sie nur bedingt für die Anfragen haften.
Sie sind somit eher auf der "sicheren Seite". Ein Vorteil für die Benutzer
besteht darin, dass sie auch auf .onion-Domains (Hidden Services im Tor-
Netzwerk) zugreifen können. Es hat allerdings auf Nachteile: Für den
Computer/Server des Betreibers fällt ein höhrer Rechenaufwand an, da er
ersteinmal alle Anfragen über das Tor-Netzwerk leiten muss. Dieser
Rechenaufwand ist allerdings bei mordernen Computer extrem gering und
fällt nicht weiter auf. Für den Benutzer des Outproxy‘s hat es den Nachteil,
dass die Verbindung zu einer Website langsamer wird als ohne Tor. Dies liegt
darin, dass die Anfragen nicht nur das I2P-Netzwerk passieren, sondern auch
das Tor-Netzwerk. Die Anzahl der Hops vergrößert sich also um drei.

### Tor installieren
Dafür öffnet man wieder ein Terminal (Ctrl+T) und gibt folgendes ein:
    sudo apt-get install tor
!(run-outproxy/run-outproxy-14.png)
Damit Tor bei jedem Systemstart mitstartet gibt man noch folgendes ein:
    sudo systemctl enable tor
!(run-outproxy/run-outproxy-15.png)

### Privoxy konfigurieren
Um die Anfragen über das Tor-Netzwerk weiterzuleiten, muss man die Privoxy
Konfigurations-Datei bearbeiten. Diese findet man unter /etc/privoxy/config
Man kann diese mit Vim bearbeiten, indem man den Befehl sudo vim
/etc/privoxy/config eingibt.
!(run-outproxy/run-outproxy-16.png)
!(run-outproxy/run-outproxy-17.png)
In der Datei geht man zum fünften Abschnitt "FORWARDING".
!(run-outproxy/run-outproxy-18.png)
In diesem Abschnitt fügt man folgendes ein:
    forward-socks4 / 127.0.0.1:9050 .
    forward-socks4a / 127.0.0.1:9050 .
    forward-socks5 / 127.0.0.1:9050 .
    forward-socks5t / 127.0.0.1:9050 .
!(run-outproxy/run-outproxy-19.png)
127.0.0.1:9050 ist die Adresse auf der der Tor-Socks-Proxy lauft.
Danach speichert man die Datei ab und startet Privoxy neu. Dies tut man mit:
    sudo systemctl restart privoxy
!(run-outproxy/run-outproxy-20.png)

Glossar
=======
Eepsite - Eine I2P interne Seite. Diese Domains haben immer die Endung .i2p
Ziel - Vergleichbar mit der IP-Adresse im Clearnet. Mit dem Ziel wird hier der Outproxy
identifiziert
Anfrage - Dabei handelt es sich hier um eine HTTP-Anfrage. Diese enthält z. B. die Seite, die
gewünschte Sprache und die Uhrzeit
Antwort - Dabei handelt es sich hier, um die Antwort auf die HTTP-Anfrage. Diese enthält den
Code für die später im Browser dargestellte SeiteWebserver - Damit bezeichnet man die Computer, auf denen eine oder mehrere Webseiten
liegen.
Clearnet - Dieser Begriff bezeichnet, dass "normale" Internet; indem auch Twitter oder
DuckDuckGo zu Hause sind.
Hop: Als Hop bezeichnet man bei I2P, die Computer über die, die Anfragen
weitergeleitet werden. Tor verwendet drei Hops (bei Tor Relays genannt). Dies
ist bei Tor nicht änderbar. Drei hat man gewählt, da man sich dachte, dass
dies ein guter Kompromiss zwischen Anonymität und Geschwindigkeit sei.
Ersatztunnel - Ersatztunnel, sind Tunnel, welche benutzt werden, wenn ein "normaler"
Tunnel unerwartet wegbricht, z. B. weil ein Teilnehmer nicht mehr verfügbar
ist.
Vim: Vim ansich ist ein Konsolen Editor. Er basiert auf vi. Um in eine Datei zu
schreiben gibt man "i" (i bedeutet insert) ein. Um die Bearbeitung abzuschlißen
gibt man Ctrl+C und dann :wq ein. Sollte eine Meldung erscheinen, dass man nicht
ausreichend Berechtigungen hätte, um die Datei zu bearbeiten, kann man vim als
sudo starten.
